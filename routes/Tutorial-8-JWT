
let express=require("express");
let app= express();
app.use (express.json());
app.use(function(req,res,next){
    res.header("Access-Control-Allow-Origin","*");
    res.header(
        "accesss-Control-Allow-Methods",
        "GET,POST,OPTIONS,PUT,PATCH,DELETE,HEAD"
    );
    res.header(
        "Access-Control-Allow-Headers",
        "Origin,X-Requested-With, Content-Type,Accept"
    );
    next();
});
// app.use("/myOrders",authorizationToken)
const port =2410;
app.listen(port,()=>console.log(`Node app listening on port ${port}!`));

const cookieParser=require("cookie-parser")
app.use(cookieParser());
app.use(authorizationToken)
const jwt=require("jsonwebtoken");
const jwt_key="secretkey237484";
const jwtExpiryTime=300;
let {users,orders}=require("./data2.js")
let cookieName="jwtToken";

function authorizationToken(req,res,next){
    // console.log("In middleware:AuthorizationToken")
    // console.log(req.header);
    const token=req.cookies[cookieName];
    console.log("Token:",token);
    if(!token)res.status(401).send("please login first")
    else{
        jwt.verify(token,jwt_key,function(err,data){
            if(err)res.status(403).send(err);
            else{
                console.log(data);
                req.user=data.user
                // res.send(orders1)
                next();
            }
        })
    }
}

// app.post("/login",function(req,res){
//     let {username,password}=req.body;
//     let user=users.find((u)=>u.name===username && u.password===password)
//     if(user){
//         const token=jwt.sign({user},jwt_key,{
//             algorithm:"HS256",
//             expiresIn:jwtExpiryTime,
//         })
//         res.cookie(cookieName,token);
//         res.send("login succes");
//     }else res.status(401).send("LOgin failed")
// });


// Jjwt with cookie
app.post("/login",function(req,res){
    let {username,password}=req.body;
    let user=users.find((u)=>u.name===username && u.password===password)
    if(user){
        const token=jwt.sign({user},jwt_key,{
            algorithm:"HS256",
            expiresIn:jwtExpiryTime,
        })
        res.cookie(cookieName,token)
        res.send("Login success");
    }else res.status(401).send("LOgin failed")
});


// app.get("/myOrders",function(req,res){
//     console.log(req.header);
//     const token=req.headers["authorization"];
//     console.log("Token:",token);
//     if(!token)res.status(401).send("please login first")
//     else{
//         jwt.verify(token,jwt_key,function(err,data){
//             if(err)res.status(403).send(err);
//             else{
//                 console.log(data);
//                 let orders1=orders.filter((ord)=>ord.useId===data.user.id);
//                 res.send(orders1)
//             }
//         })
//     }
// })

app.get("/myOrders",function(req,res){
    console.log("In GET request/myOrders")
    let orders1=orders.filter((ord)=>ord.useId===req.user.id)
    res.send(orders1)
})


app.get("/info",function(req,res){
    res.send("Hello. Welcome to the Tutorial")
})
